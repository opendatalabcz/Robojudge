from typing import Optional
import datetime
from enum import auto

from strenum import StrEnum
from pydantic import BaseModel, Field


class ScrapingFilters(BaseModel):
    judge_firstname: Optional[str] = ""
    judge_lastname: Optional[str] = ""
    court: Optional[str] = ""
    fulltext_search: Optional[str] = ""
    # keyword: Optional[str] = '' # Does not work on the website
    publication_date_from: Optional[str] = Field(
        default="", description="YYYY-MM-DD")
    publication_date_to: Optional[str] = Field(
        default="", description="YYYY-MM-DD")


class CaseMetadataAttributes(StrEnum):
    JEDNACI_CISLO = "jednaci_cislo"
    COURT = "court"
    JUDGE_NAME = "judge_name"
    ECLI_ID = "ecli_id"
    SUBJECT_MATTER = "subject_matter"
    SENTENCE_DATE = "sentence_date"
    PUBLICATION_DATE = "publication_date"
    LAST_CHANGE_DATE = "last_change_date"
    KEYWORDS = "keywords"
    REGULATIONS_MENTIONED = "regulations_mentioned"
    RELATED_CASES = "related_cases"


DOCUMENT_METADATA_MAP = {
    "Jednací číslo": CaseMetadataAttributes.JEDNACI_CISLO,
    "Soud": CaseMetadataAttributes.COURT,
    "Autor": CaseMetadataAttributes.JUDGE_NAME,
    "Identifikátor ECLI": CaseMetadataAttributes.ECLI_ID,
    "Předmět řízení": CaseMetadataAttributes.SUBJECT_MATTER,
    "Datum vydání": CaseMetadataAttributes.SENTENCE_DATE,
    "Datum zveřejnění": CaseMetadataAttributes.PUBLICATION_DATE,
    "Datum poslední změny": CaseMetadataAttributes.PUBLICATION_DATE,
    "Klíčová slova": CaseMetadataAttributes.KEYWORDS,
    "Zmíněná ustanovení": CaseMetadataAttributes.REGULATIONS_MENTIONED,
    "Vztah k jiným rozhodnutím": CaseMetadataAttributes.RELATED_CASES,
}

# TODO: explain what these mean
class Metadata(BaseModel):
    jednaci_cislo: str
    court: str = ''
    subject_matter: str
    judge_name: str
    sentence_date: datetime.datetime
    publication_date: datetime.datetime
    ecli_id: str = ""
    keywords: list[str] = []
    regulations_mentioned: list[str] = []
    related_cases: list[str] = []


class Case(BaseModel):
    case_id: str = Field(
        description="This ID corresponds to an integer used by the Justice Ministry's website"
    )
    metadata: Metadata
    verdict: str = Field(default="", description='"výrok" in Czech')
    reasoning: str = Field(default="", description='"odůvodnění" in Czech')
    summary: Optional[str] = Field(
        default="", description="A summary of the case's reasoning generated by an LLM"
    )
    title: Optional[str] = Field(
        default="",
        description="Eye-catching title generated by an LLM from the summary",
    )


class CaseChunk(BaseModel):
    chunk_id: str = Field(
        description="Not case_id but the internal ChromaDB id")
    chunk_index: int
    case_id: str
    chunk_text: str
    metadata: dict


class ScrapingJobStatus(StrEnum):
    RUNNING = auto()
    FINISHED = auto()
    ERROR = auto()


class ScrapingJobType(StrEnum):
    SCHEDULED = auto()
    MANUAL = auto()


class ScrapingJob(BaseModel):
    token: Optional[str] = ''
    last_ruling_id: int = -1
    started_at: datetime.datetime
    finished_at: datetime.datetime = None
    filters: Optional[ScrapingFilters] = None
    status: ScrapingJobStatus = ScrapingJobStatus.RUNNING
    filtered_ruling_ids: list[str] = []
    scraped_ruling_ids: list[str] = []
    type: ScrapingJobType = ScrapingJobType.SCHEDULED

    class Config:
        use_enum_values = True
