from typing import Optional
import datetime
from enum import auto

from strenum import StrEnum
from pydantic import BaseModel, Field


class ScrapingFilters(BaseModel):
    judge_firstname: Optional[str] = Field(
        default="",
        description="First name of the judge who decided the case.",
        example="Petr",
    )
    judge_lastname: Optional[str] = Field(
        default="",
        description="Last name of the judge who decided the case.",
        example="Mareš",
    )
    court: Optional[str] = Field(
        default="",
        description="Exact name of the court who handed down the ruling.",
        example="Okresní soud ve Zlíně",
    )
    fulltext_search: Optional[str] = Field(
        default="",
        description="Will search for this string in the rulings in a fulltext manner.",
        example="Žalovaný se k návrhu žalobce nevyjádřil",
    )
    # keyword: Optional[str] = '' # Does not work on the justice website
    publication_date_from: Optional[str] = Field(
        default="",
        description="String date in the 'YYYY-MM-DD' format. Publication means when the ruling was uploaded to the justice.cz website",
        example="2020-12-01",
    )
    publication_date_to: Optional[str] = Field(
        default="",
        description="String date in the 'YYYY-MM-DD' format. Publication means when the ruling was uploaded to the justice.cz website",
        example="2020-12-01",
    )


class CaseMetadataAttributes(StrEnum):
    JEDNACI_CISLO = "jednaci_cislo"
    COURT = "court"
    JUDGE_NAME = "judge_name"
    ECLI_ID = "ecli_id"
    SUBJECT_MATTER = "subject_matter"
    SENTENCE_DATE = "sentence_date"
    PUBLICATION_DATE = "publication_date"
    LAST_CHANGE_DATE = "last_change_date"
    KEYWORDS = "keywords"
    REGULATIONS_MENTIONED = "regulations_mentioned"
    RELATED_CASES = "related_cases"


DOCUMENT_METADATA_MAP = {
    "Jednací číslo": CaseMetadataAttributes.JEDNACI_CISLO,
    "Soud": CaseMetadataAttributes.COURT,
    "Autor": CaseMetadataAttributes.JUDGE_NAME,
    "Identifikátor ECLI": CaseMetadataAttributes.ECLI_ID,
    "Předmět řízení": CaseMetadataAttributes.SUBJECT_MATTER,
    "Datum vydání": CaseMetadataAttributes.SENTENCE_DATE,
    "Datum zveřejnění": CaseMetadataAttributes.PUBLICATION_DATE,
    "Datum poslední změny": CaseMetadataAttributes.PUBLICATION_DATE,
    "Klíčová slova": CaseMetadataAttributes.KEYWORDS,
    "Zmíněná ustanovení": CaseMetadataAttributes.REGULATIONS_MENTIONED,
    "Vztah k jiným rozhodnutím": CaseMetadataAttributes.RELATED_CASES,
}


class Metadata(BaseModel):
    jednaci_cislo: str = Field(
        description="Identification string used in the Czech legal system. For the purposes of the API, 'spisová značka' is understood to be the same thing as 'číslo jednací'.",
        example="19 C 77/2023-44",
    )
    court: str = Field(
        default="",
        description="Name of the court handing down the ruling.",
        example="Okresní soud ve Zlíně",
    )
    subject_matter: str = Field(
        description="A short description of the subject matter",
        example="rozvod manželství",
    )
    judge_name: str = Field(
        description="Full name of the judge handing down the ruling."
    )
    sentence_date: datetime.datetime = Field(
        description="Date of handing down the ruling."
    )
    publication_date: datetime.datetime = Field(
        description="Date of publishing the ruling on the justice.cz website."
    )
    ecli_id: str = Field(
        default="",
        description="European case law identifier",
        example="ECLI:CZ:OSZL:2023:19.C.77.2023.1",
    )
    keywords: list[str] = Field(
        default=[],
        description="List of words (usually legal terms) pertaining to the ruling.",
        example=["rozvod manželství", "výživné"],
    )
    regulations_mentioned: list[str] = Field(
        default=[],
        description="List of regulations related to the ruling.",
        example=["§ 23 z. č. 292/2013 Sb.", "§ 757 z. č. 89/2012 Sb"],
    )
    related_cases: list[str] = Field(
        default=[], description="List of ruling 'jednací číslo' related to this ruling."
    )


class Case(BaseModel):
    case_id: str = Field(
        description="This ID corresponds to an integer used by the Justice Ministry's website"
    )
    metadata: Metadata
    verdict: str = Field(default="", description='"výrok" in Czech')
    reasoning: str = Field(default="", description='"odůvodnění" in Czech')
    summary: Optional[str] = Field(
        default="", description="A summary of the case's reasoning generated by an LLM"
    )
    title: Optional[str] = Field(
        default="",
        description="'Eye-catching' title generated by an LLM from the summary",
    )


class CaseChunk(BaseModel):
    chunk_id: str = Field(description="Not case_id but the internal ChromaDB id")
    chunk_index: int = Field(description="Used to sort chunks of the same ruling")
    case_id: str
    chunk_text: str
    metadata: dict


class ScrapingJobStatus(StrEnum):
    RUNNING = auto()
    FINISHED = auto()
    ERROR = auto()


class ScrapingJobType(StrEnum):
    SCHEDULED = auto()
    MANUAL = auto()


class ScrapingJob(BaseModel):
    token: Optional[str] = ""
    last_ruling_id: int = -1
    started_at: datetime.datetime
    finished_at: datetime.datetime = None
    filters: Optional[ScrapingFilters] = None
    status: ScrapingJobStatus = ScrapingJobStatus.RUNNING
    filtered_ruling_ids: list[str] = []
    scraped_ruling_ids: list[str] = []
    previous_empty_scraping_counts: int = 0
    type: ScrapingJobType = ScrapingJobType.SCHEDULED

    class Config:
        use_enum_values = True
